import{a as f,t as w,c as et}from"../chunks/DldQStsR.js";import{i as at}from"../chunks/CATt0WfG.js";import{p as rt,o as ot,a as st,f as k,c as lt,b as o,g as a,s as v,e as s,r,h as nt,i as ct,j as C}from"../chunks/FJRCtc8Y.js";import{e as p,s as m}from"../chunks/CuXJoPns.js";import{i as D}from"../chunks/B2zXuP2w.js";import{e as dt,f as it}from"../chunks/DpdfpHoe.js";import{c as pt,C as ht}from"../chunks/DvOSdxAZ.js";import{s as bt}from"../chunks/CyGVOWoH.js";var ut=w('<button class="bg-gray-600 text-white px-3 py-1 rounded hover:bg-gray-700">Stop</button> <button class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700">Console</button> <button class="bg-yellow-600 text-white px-3 py-1 rounded hover:bg-yellow-700">Detach ISO</button>',1),ft=w('<button class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700">Start</button>'),vt=w('<tr class="border-b"><td class="py-2"> </td><td class="py-2"> </td><td class="py-2"> </td><td class="py-2"><span> </span></td><td class="py-2 space-x-2"><!> <button class="bg-red-600 text-white px-3 py-1 rounded hover:bg-red-700">Delete</button></td></tr>'),yt=w('<div class="bg-white rounded-lg shadow p-6"><div class="mb-4"><button class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Create VM</button></div> <table class="w-full"><thead><tr class="border-b"><th class="text-left py-2">Name</th><th class="text-left py-2">Cores</th><th class="text-left py-2">Memory</th><th class="text-left py-2">State</th><th class="text-left py-2">Actions</th></tr></thead><tbody></tbody></table></div> <!>',1);function $t(q,B){rt(B,!1);let F=C([]),_=C(!1),O,l=C(new Set);async function c(){try{const e=await fetch("/api/vms");v(F,await e.json())}catch(e){console.error("Failed to load VMs:",e)}}async function L(e){try{await fetch(`/api/vms/${e}/start`,{method:"POST"}),await c()}catch(t){console.error("Failed to start VM:",t)}}async function z(e){try{a(l).add(e),v(l,a(l)),await fetch(`/api/vms/${e}/stop`,{method:"POST"}),await c()}catch(t){console.error("Failed to stop VM:",t)}finally{a(l).delete(e),v(l,a(l))}}async function G(e){if(confirm(`Are you sure you want to delete ${e}?`))try{await fetch(`/api/vms/${e}`,{method:"DELETE"}),await c()}catch(t){console.error("Failed to delete VM:",t)}}async function H(e){try{const t=await fetch(`/api/vms/${e}/vnc`),{port:h,host:b}=await t.json();window.open(`http://${b}:${h}/vnc.html`,"_blank")}catch(t){console.error("Failed to open VNC:",t)}}async function J(e){try{await fetch(`/api/vms/${e}/detach-iso`,{method:"POST"}),await c()}catch(t){console.error("Failed to detach ISO:",t)}}ot(()=>{c(),O=setInterval(c,5e3)}),st(()=>{clearInterval(O)}),at();var I=yt(),g=k(I),x=s(g),K=s(x);r(x);var T=o(x,2),j=o(s(T));dt(j,5,()=>a(F),e=>e.name,(e,t)=>{var h=vt(),b=s(h),U=s(b,!0);r(b);var M=o(b),W=s(M,!0);r(M);var S=o(M),X=s(S);r(S);var V=o(S),$=s(V),Y=s($,!0);r($),r(V);var E=o(V),N=s(E);{var Z=n=>{var d=ut(),i=k(d),y=o(i,2),u=o(y,2);p("click",i,()=>z(a(t).name)),p("click",y,()=>H(a(t).name)),p("click",u,()=>J(a(t).name)),f(n,d)},tt=n=>{var d=et(),i=k(d);{var y=u=>{var A=ft();p("click",A,()=>L(a(t).name)),f(u,A)};D(i,u=>{a(t).state==="stopped"&&u(y)},!0)}f(n,d)};D(N,n=>{a(t).state==="running"?n(Z):n(tt,!1)})}var P=o(N,2);r(E),r(h),nt((n,d,i)=>{m(U,a(t).name),m(W,a(t).cores),m(X,`${a(t).memory??""} MB`),bt($,pt(n)),m(Y,d),P.disabled=i},[()=>a(l).has(a(t).name)?"px-2 py-1 rounded-full bg-yellow-100 text-yellow-800":it(a(t).state),()=>a(l).has(a(t).name)?"stopping":a(t).state,()=>a(l).has(a(t).name)],ct),p("click",P,()=>G(a(t).name)),f(e,h)}),r(j),r(T),r(g);var Q=o(g,2);{var R=e=>{ht(e,{$$events:{close:()=>v(_,!1),created:c}})};D(Q,e=>{a(_)&&e(R)})}p("click",K,()=>v(_,!0)),f(q,I),lt()}export{$t as component};
